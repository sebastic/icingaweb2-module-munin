<div class="controls">
<?php

$title = $this->qlink(
                       'Overview',
                       'munin/graph/show',
                       []
                     );

$subtitle = '';

if(basename(__FILE__) == 'problems.phtml') {
    $title .= ' :: Problem overview :: [';
    foreach($this->problems as $problem) {
        $title .= " <a href=\"#". $this->escape($problem) ."\">";
        $title .= $this->escape($problem);
        $title .= "</a>";
    }
    $title .= ' ]';
}
elseif($this->group && in_array($this->group, $this->groups)) {
    if(!$this->host && !$this->period) {
        $title .= ' :: '. $this->group;
    }
    else {
        $title .= ' :: '. $this->qlink(
                                        $this->group,
                                        'munin/graph/show',
                                        [
                                          'group' => $this->group,
                                        ]
                                      );

        if(
            $this->period &&
            array_key_exists($this->group, $this->group_categories) &&
            count($this->group_categories[$this->group]) > 0

        ) {
            $subtitle  = $this->group .' :: [';
            foreach($this->group_categories[$this->group] as $category) {
                $subtitle .= " <a href=\"#". $this->escape($category) ."\">";
                $subtitle .= $this->escape($category);
                $subtitle .= "</a>";
            }
            $subtitle .= ' ]';
        }
    }

    if(!$this->host) {
        $title .= ' :: [';
        foreach($this->periods as $period) {
            $title .= " ". $this->qlink(
                                         $this->escape($period),
                                         'munin/graph/show',
                                         [
                                           'group'  => $this->group,
                                           'period' => $period,
                                         ]
                                       );
        }
        $title .= " ]";
    }
    else {
        if($this->plugin) {
            $title .= ' :: '. $this->qlink(
                                            $this->escape($this->host),
                                            'munin/graph/show',
                                            [
                                              'group' => $this->group,
                                              'host'  => $this->host,
                                            ]
                                          );
            $title .= ' :: '. $this->plugin;
        }
        else {
            $title .= ' :: '. $this->host;

            if(
                array_key_exists($this->group, $this->host_categories) &&
                array_key_exists($this->host, $this->host_categories[$this->group]) &&
                count($this->host_categories[$this->group][$this->host]) > 0
            ) {
                $subtitle  = $this->host .' :: [';
                foreach($this->host_categories[$this->group][$this->host] as $category) {
                    $class = '';
                    if(
                        array_key_exists($this->group, $this->category_problems) &&
                        array_key_exists($this->host, $this->category_problems[$this->group]) &&
                        array_key_exists($category, $this->category_problems[$this->group][$this->host])
                    ) {
                        if(array_key_exists('critical', $this->category_problems[$this->group][$this->host][$category])) {
                            $class = 'crit';
                        }
                        elseif(array_key_exists('warning', $this->category_problems[$this->group][$this->host][$category])) {
                            $class = 'warn';
                        }
                        elseif(array_key_exists('unknown', $this->category_problems[$this->group][$this->host][$category])) {
                            $class = 'unkn';
                        }
                    }

                    $subtitle .= " <a href=\"#". $this->escape($category) ."\"";
                    if($class) {
                        $subtitle .= " class=\"$class\"";
                    }
                    $subtitle .= ">";
                    $subtitle .= $this->escape($category);
                    $subtitle .= "</a>";
                }
                $subtitle .= ' ]';
            }
        }
    }
}

print "<h1>";
print "<table class=\"header\">";
print "<tr><td rowspan=\"2\">";
print "<div class=\"logo\"/>";
print "</td><td>";
print "<div class=\"currentpage\">";
print $title;
print "</div>";
print "</td></tr>";
print "<tr><td>";
print "<div class=\"subtitle\">";
if($subtitle) {
    print $subtitle;
}
else {
    print "&nbsp;";
}
print "</div>";
print "</td></tr>";
print "</table>";
print "</h1>\n";

?>
</div>


<div class="content" data-base-target="_self">
   <div id="nav">
     <h2>Problems</h2>
     <ul>
       <li><a href="problems#critical">Critical</a> (<?= $this->problem_count['critical'] ?>)</li>
       <li><a href="problems#warning">Warning</a> (<?= $this->problem_count['warning'] ?>)</li>
       <li><a href="problems#unknown">Unknown</a> (<?= $this->problem_count['unknown'] ?>)</li>
     </ul>

     <h2>Groups</h2>
<?php

if(count($this->groups) > 0) {
    print "     <ul>\n";
    foreach($this->groups as $group) {
        print "       <li>";

        print $this->qlink(
                            $this->escape($group),
                            'munin/graph/show',
                            [
                              'group' => $group,
                            ]
                          );

        print "</li>\n";
    }
    print "     </ul>\n";
}

?>

     <h2>Categories</h2>
<?php

if(count($this->categories) > 0) {
    print "     <ul>\n";
    foreach($categories as $category) {
        print "       <li>";

        print $this->qlink(
                            $this->escape($category),
                            'munin/graph/show',
                            [
                              'category' => $category,
                              'period'   => $this->periods[0],
                            ]
                          );

        print " [";
        foreach($this->periods as $period) {
            print " ". $this->qlink(
                                     substr($period, 0, 1),
                                     'munin/graph/show',
                                     [
                                       'category' => $category,
                                       'period'   => $period,
                                     ]
                                   );

        }
        print " ]";

        print "</li>\n";
    }
    print "     </ul>\n";
}

?>
   </div>
   <div id="content">
<?php

if(basename(__FILE__) == 'problems.phtml') {
    foreach($this->problems as $problem) {
        print "<div id=\"$problem\" class=\"problem\">\n";
        print "<h3>". $this->problem_title[$problem] ."</h3>\n";
        if(array_key_exists($problem, $this->problem_hosts)) {
            ksort($this->problem_hosts[$problem]);

            print "<table>\n";
            foreach($this->problem_hosts[$problem] as $group => $group_value) {
                ksort($group_value);

                foreach($group_value as $host => $host_value) {
                    sort($host_value);

                    foreach($host_value as $plugin) {
                        $title = $plugin;
                        if(
                            array_key_exists('_group', $this->data) &&
                            array_key_exists($group, $this->data['_group']) &&
                            array_key_exists($host, $this->data['_group'][$group]) &&
                            array_key_exists('_plugin', $this->data['_group'][$group][$host]) &&
                            array_key_exists($plugin, $this->data['_group'][$group][$host]['_plugin']) &&
                            array_key_exists('graph_title', $this->data['_group'][$group][$host]['_plugin'][$plugin])
                        ) {
                            $title = $this->data['_group'][$group][$host]['_plugin'][$plugin]['graph_title'];
                        }

                        print "<tr><td>\n";

                        print "<div class=\"node\">\n";
                        print "<span class=\"nodetitle\">";
                        print $this->qlink(
                                            $this->escape($host),
                                            'munin/graph/show',
                                            [
                                              'group' => $group,
                                              'host'  => $host,
                                            ]
                                          );
                        print " :: ";
                        print $this->qlink(
                                            $this->escape($title),
                                            'munin/graph/show',
                                            [
                                              'group'  => $group,
                                              'host'   => $host,
                                              'plugin' => $plugin,
                                            ]
                                          );
                        print "</span>\n";

                        print "<br/>\n";

                        $url  = 'show';
                        $url .= '?group='.  $this->escape($group);
                        $url .= '&host='.   $this->escape($host);
                        $url .= '&plugin='. $this->escape($plugin);

                        $img  = $this->graph_baseurl;
                        $img .= '/'. $this->escape($group);
                        $img .= '/'. $this->escape($host);
                        $img .= '/'. $this->escape($plugin);
                        $img .= '-day.png';

                        print "<a href=\"$url\"><img src=\"$img\" alt=\"$title\" class=\"i\" /></a>";
                        print "</div>\n";

                        print "</td><td>\n";

                        print "<div class=\"node\">\n";
                        print "<span class=\"nodetitle\">";
                        print $this->qlink(
                                            $this->escape($host),
                                            'munin/graph/show',
                                            [
                                              'group' => $group,
                                              'host'  => $host,
                                            ]
                                          );
                        print " :: ";
                        print $this->qlink(
                                            $this->escape($title),
                                            'munin/graph/show',
                                            [
                                              'group'  => $group,
                                              'host'   => $host,
                                              'plugin' => $plugin,
                                            ]
                                          );
                        print "</span>\n";

                        print "<br/>\n";

                        $url  = 'show';
                        $url .= '?group='.  $this->escape($group);
                        $url .= '&host='.   $this->escape($host);
                        $url .= '&plugin='. $this->escape($plugin);

                        $img  = $this->graph_baseurl;
                        $img .= '/'. $this->escape($group);
                        $img .= '/'. $this->escape($host);
                        $img .= '/'. $this->escape($plugin);
                        $img .= '-week.png';

                        print "<a href=\"$url\"><img src=\"$img\" alt=\"$title\" class=\"i\" /></a>";
                        print "</div>\n";

                        print "</td></tr>\n";
                    }
                }
            }
            print "</table>\n";
        }
        print "</div>\n";
    }
}
elseif($this->category && $this->period) {
    if(
        array_key_exists('_group', $this->data) &&
        count($this->data['_group']) > 0
    ) {
        ksort($this->data['_group']);

        $plugins = [];

        foreach($this->data['_group'] as $group => $group_value) {
            foreach($group_value as $host => $host_value) {
                if(
                    array_key_exists('_category', $host_value) &&
                    array_key_exists($this->category, $host_value['_category']) &&
                    count($host_value['_category'][$this->category]) > 0
                ) {
                    foreach($host_value['_category'][$this->category] as $plugin => $plugin_value)  {
                        $title = $plugin;
                        if(array_key_exists('graph_title', $plugin_value)) {
                            $title = $plugin_value['graph_title'];
                        }

                        $plugins[$plugin] = $title;
                    }
                }
            }
        }

        asort($plugins);

        if(count($plugins) > 0) {
            foreach($plugins as $plugin => $title) {
                print "<h3>$title</h3>\n";

                foreach($this->data['_group'] as $group => $group_value) {
                    ksort($group_value);

                    foreach($group_value as $host => $host_value) {
                        if(
                            array_key_exists('_plugin', $host_value) &&
                            array_key_exists($plugin, $host_value['_plugin']) &&
                            count($host_value['_plugin'][$plugin]) > 0
                        ) {
                            print "<div class=\"node\">\n";
                            print "<span class=\"nodetitle\">";

                            print $this->qlink(
                                                $this->escape($host),
                                                'munin/graph/show',
                                                [
                                                  'group' => $group,
                                                  'host'  => $host,
                                                ]
                                              );

                            print " :: ";

                            print $this->qlink(
                                                $this->escape($title),
                                                'munin/graph/show',
                                                [
                                                  'group'  => $group,
                                                  'host'   => $host,
                                                  'plugin' => $plugin,
                                                ]
                                              );

                            print "</span>\n";

                            print "<br/>\n";

                            $url  = 'show';
                            $url .= '?group='.  $this->escape($group);
                            $url .= '&host='.   $this->escape($host);
                            $url .= '&plugin='. $this->escape($plugin);

                            $img  = $this->graph_baseurl;
                            $img .= '/'. $this->escape($group);
                            $img .= '/'. $this->escape($host);
                            $img .= '/'. $this->escape($plugin);
                            $img .= '-'. $this->escape($this->period). '.png';

                            print "<a href=\"$url\"><img src=\"$img\" alt=\"$title\" /></a>";

                            print "</div>\n";
                        }
                    }
                }
            }
        }
    }
}
elseif($this->group && $this->host && $this->plugin) {
    if(
        array_key_exists('_group', $this->data) &&
        array_key_exists($this->group, $this->data['_group']) &&
        array_key_exists($this->host, $this->data['_group'][$this->group]) &&
        array_key_exists('_plugin', $this->data['_group'][$this->group][$this->host]) &&
        array_key_exists($this->plugin, $this->data['_group'][$this->group][$this->host]['_plugin']) &&
        count($this->data['_group'][$this->group][$this->host]['_plugin'][$this->plugin]) > 0
    ) {
        $dynazoom_baseurl  = $this->munin_baseurl;
        $dynazoom_baseurl .= '/static/dynazoom.html';
        $dynazoom_baseurl .= '?cgiurl_graph='. $this->escape($this->cgiurl_graph);
        $dynazoom_baseurl .= '&plugin_name='.  $this->escape($this->group);
        $dynazoom_baseurl .= '/'.              $this->escape($this->host);
        $dynazoom_baseurl .= '/'.              $this->escape($this->plugin);
        $dynazoom_baseurl .= '&size_x=800';
        $dynazoom_baseurl .= '&size_y=400';

        print "<table>\n";

        $i = 0;
        foreach($this->periods as $period) {
            if($i == 0) {
                print "<tr>";
            }

            $url  = $dynazoom_baseurl;
            $url .= '&start_epoch='.  (time() - (86400 * $this->period_days[$period]));
            $url .= '&stop_epoch='.   time();

            $class = '';
            if(
                array_key_exists($this->group, $this->host_problems) &&
                array_key_exists($this->host, $this->host_problems[$this->group]) &&
                array_key_exists($this->plugin, $this->host_problems[$this->group][$this->host])
            ) {
                if(array_key_exists('critical', $this->host_problems[$this->group][$this->host][$this->plugin])) {
                    $class = 'crit';
                }
                elseif(array_key_exists('warning', $this->host_problems[$this->group][$this->host][$this->plugin])) {
                    $class = 'warn';
                }
                elseif(array_key_exists('unknown', $this->host_problems[$this->group][$this->host][$this->plugin])) {
                    $class = 'unkn';
                }
            }
            $i_class = 'i'. $class;

            $img  = $this->graph_baseurl;
            $img .= '/'. $this->escape($this->group);
            $img .= '/'. $this->escape($this->host);
            $img .= '/'. $this->escape($this->plugin);
            $img .= '-'. $this->escape($period) .'.png';

            $alt  = $this->escape($this->periodicity[$period]);
            $alt .= " graph";

            print "<td>";
            print "<a href=\"$url\"";
            if($class) {
                print " class=\"$class\"";
            }
            print " target=\"_blank\">";
            print "<img src=\"$img\" alt=\"$alt\" class=\"$i_class\" />";
            print "</a>";
            print "</td>";

            $i++;

            if($i == 2) {
                print "</tr>\n";

                $i = 0;
            }
        }

        print "</table>\n";

        if(
            array_key_exists($this->group, $this->host_problems) &&
            array_key_exists($this->host, $this->host_problems[$this->group]) &&
            array_key_exists($this->plugin, $this->host_problems[$this->group][$this->host])
        ) {
            if(array_key_exists('critical', $this->host_problems[$this->group][$this->host][$this->plugin])) {
                print "<p/>\n";
                print "<p>";
                print "<strong>Note:</strong>";
                print " This service is in CRITICAL state because one of the values reported is outside the allowed range.";
                print " Please see further down for information about the ranges and the graph for the values.";
                print "</p>\n";
            }
            elseif(array_key_exists('warning', $this->host_problems[$this->group][$this->host][$this->plugin])) {
                print "<p/>\n";
                print "<p>";
                print "<strong>Note:</strong>";
                print " This service is in WARNING state because one of the values reported is outside the allowed range.";
                print " Please see further down for information about the ranges and the graph for the values.";
                print "</p>\n";
            }
        }

        print "<table id=\"legend\">\n";

        $url  = $this->munin_baseurl ."/static/definitions.html#data_types";

        print "<tr>";
        print "<th class=\"field\">Field</th>";
        print "<th class=\"internal\"><span title=\"For use in munin.conf\">Internal name</span></th>";
        print "<th class=\"type\"><a href=\"$url\">Type</a></th>";
        print "<th class=\"warn\">Warn</th>";
        print "<th class=\"crit\">Crit</th>";
        print "<th class=\"info\">Info</th>";
        print "</tr>\n";

        $datasources = [];

        ksort($this->data['_group'][$this->group][$this->host]['_plugin'][$this->plugin]);

        foreach($this->data['_group'][$this->group][$this->host]['_plugin'][$this->plugin] as $key => $value) {
            if(preg_match('/^(\S+)\.(critical|graph|info|label|type|warning)$/', $key, $matches)) {
                if(!array_key_exists($matches[1], $datasources)) {
                    $datasources[$matches[1]] = [];
                }

                $datasources[$matches[1]][$matches[2]] = $value;
            }
	}

        ksort($datasources);

        $order = array_keys($datasources);
        if(array_key_exists('graph_order', $this->data['_group'][$this->group][$this->host]['_plugin'][$this->plugin])) {
            $order = explode(' ', $this->data['_group'][$this->group][$this->host]['_plugin'][$this->plugin]['graph_order']);
        }

        $i = 1;
        foreach($order as $datasource) {
            $datasource_value = $datasources[$datasource];

            $graph = 'yes';
            if(array_key_exists('graph', $datasource_value)) {
                $graph = $datasource_value['graph'];
            }

            if($graph == 'no') {
                continue;
            }

            $label = $datasource;
            if(array_key_exists('label', $datasource_value)) {
                $label = $datasource_value['label'];
            }

            $type = 'gauge';
            if(array_key_exists('type', $datasource_value)) {
                $type = $datasource_value['type'];
            }

            $warning = '&nbsp;';
            if(array_key_exists('warning', $datasource_value)) {
                $warning = $datasource_value['warning'];
            }

            $critical = '&nbsp;';
            if(array_key_exists('critical', $datasource_value)) {
                $critical = $datasource_value['critical'];
            }

            $info = '&nbsp;';
            if(array_key_exists('info', $datasource_value)) {
                $info = $datasource_value['info'];
            }

            $class = 'oddrow';
            if($i == 2) {
                $class = 'evenrow';
            }

            $state = 'ok';
            if(
                array_key_exists('_group', $this->limits) &&
                array_key_exists($this->group, $this->limits['_group']) &&
                array_key_exists($this->host, $this->limits['_group'][$this->group]) &&
                array_key_exists($this->plugin, $this->limits['_group'][$this->group][$this->host]) &&
                array_key_exists($datasource, $this->limits['_group'][$this->group][$this->host][$this->plugin]) &&
                array_key_exists('state', $this->limits['_group'][$this->group][$this->host][$this->plugin][$datasource]) &&
                count($this->limits['_group'][$this->group][$this->host][$this->plugin][$datasource]) > 0
            ) {
                $state = $this->limits['_group'][$this->group][$this->host][$this->plugin][$datasource]['state'];
            }

            print "<tr class=\"$class\">";
            print "<td class=\"field\">$label</td>";
            print "<td class=\"internal\"><span title=\"For use in munin.conf\">$datasource</span></td>";
            print "<td class=\"type\">$type</td>";
            print "<td class=\"warn\">";
            if($state == 'warning') {
                print "<div class=\"warntext\">$warning</div>";
            }
            else {
                print "$warning";
            }
            print "</td>";
            print "<td class=\"crit\">";
            if($state == 'critical') {
                print "<div class=\"crittext\">$critical</div>";
            }
            else {
                print "$critical";
            }
            print "</td>";
            print "<td class=\"info\">$info</td>";
            print "</tr>\n";

            $i++;

            if($i > 2) {
                $i = 1;
            }
        }

        print "</table>\n";
    }
}
elseif($this->group && $this->host) {
    if(
        array_key_exists('_group', $this->data) &&
        array_key_exists($this->group, $this->data['_group']) &&
        array_key_exists($this->host, $this->data['_group'][$this->group]) &&
        array_key_exists('_category', $this->data['_group'][$this->group][$this->host]) &&
        count($this->data['_group'][$this->group][$this->host]['_category']) > 0
    ) {
        ksort($this->data['_group'][$this->group][$this->host]['_category']);

        foreach($this->data['_group'][$this->group][$this->host]['_category'] as $category => $category_value) {
            $plugins = [];

            foreach($category_value as $plugin => $plugin_value) {
                $title = $plugin;
                if(array_key_exists('graph_title', $plugin_value)) {
                    $title = $plugin_value['graph_title'];
                }

                $plugins[$plugin] = $title;
            }

            asort($plugins);

            print "<h3 id=\"$category\">$category</h3>\n";
            print "<table>\n";
            foreach($plugins as $plugin => $title) {
                print "<tr><td colspan=\"2\">$title</td></tr>\n";
                print "<tr><td>";

                $url  = 'show';
                $url .= '?group='.  $this->escape($this->group);
                $url .= '&host='.   $this->escape($this->host);
                $url .= '&plugin='. $this->escape($plugin);

                $class = '';
                if(
                    array_key_exists($this->group, $this->host_problems) &&
                    array_key_exists($this->host, $this->host_problems[$this->group]) &&
                    array_key_exists($plugin, $this->host_problems[$this->group][$this->host])
                ) {
                    if(array_key_exists('critical', $this->host_problems[$this->group][$this->host][$plugin])) {
                        $class = 'crit';
                    }
                    elseif(array_key_exists('warning', $this->host_problems[$this->group][$this->host][$plugin])) {
                        $class = 'warn';
                    }
                    elseif(array_key_exists('unknown', $this->host_problems[$this->group][$this->host][$plugin])) {
                        $class = 'unkn';
                    }
                }
                $i_class = 'i'. $class;

                $img  = $this->graph_baseurl;
                $img .= '/'. $this->escape($this->group);
                $img .= '/'. $this->escape($this->host);
                $img .= '/'. $this->escape($plugin);
                $img .= '-day.png';

                print "<a href=\"$url\"";
                if($class) {
                    print " class=\"$class\"";
                }
                print "><img src=\"$img\" alt=\"$title\" class=\"$i_class\" /></a>";
                print "</td><td>";

                $img  = $this->graph_baseurl;
                $img .= '/'. $this->escape($this->group);
                $img .= '/'. $this->escape($this->host);
                $img .= '/'. $this->escape($plugin);
                $img .= '-week.png';

                print "<a href=\"$url\"";
                if($class) {
                    print " class=\"$class\"";
                }
                print "><img src=\"$img\" alt=\"$title\" class=\"$i_class\" /></a>";
                print "</td></tr>\n";
            }
            print "</table>\n";
        }
    }
}
elseif($this->group && $this->period) {
    if(
        in_array($this->period, $this->periods) &&
        array_key_exists('_group', $this->data) &&
        array_key_exists($this->group, $this->data['_group']) &&
        count($this->data['_group'][$this->group]) > 0
    ) {
        ksort($this->data['_group'][$this->group]);

        $categories = [];

        foreach($this->data['_group'][$this->group] as $host => $host_value) {
            if(array_key_exists('_category', $host_value)) {
                foreach($host_value['_category'] as $category => $category_value) {
                    if(!in_array($category, $categories)) {
                        array_push($categories, $category);
                    }
                }
            }
        }

        sort($categories);

        foreach($categories as $category) {
            print "<h3 id=\"$category\">$category</h3>\n";

            $plugins = [];

            foreach($this->data['_group'][$this->group] as $host => $host_value) {
                if(
                    array_key_exists('_category', $host_value) &&
                    array_key_exists($category, $host_value['_category']) &&
                    count($host_value['_category'][$category]) > 0
                ) {
                    foreach($host_value['_category'][$category] as $plugin => $plugin_value) {
                        if(!in_array($plugin, $plugins)) {
                            $title = $plugin;
                            if(array_key_exists('graph_title', $plugin_value)) {
                                $title = $plugin_value['graph_title'];
                            }

                            $plugins[$plugin] = $title;
                        }
                    }
                }
            }

            asort($plugins);

            print "<table class=\"comparison\">\n";
            foreach($plugins as $plugin => $title) {
                print "<tr>";

                foreach($this->data['_group'][$this->group] as $host => $host_value) {
                    ksort($host_value);

                    print "<td>";
                    print "<div class=\"node\">";

                    print $this->qlink(
                                        $this->escape($host),
                                        'munin/graph/show',
                                        [
                                          'group' => $this->group,
                                          'host'  => $host,
                                        ]
                                      );

                    if(
                        array_key_exists('_plugin', $host_value) &&
                        array_key_exists($plugin, $host_value['_plugin']) &&
                        count($host_value['_plugin'][$plugin]) > 0
                    ) {
                        $class = '';
                        if(
                            array_key_exists($this->group, $this->host_problems) &&
                            array_key_exists($host, $this->host_problems[$this->group]) &&
                            array_key_exists($plugin, $this->host_problems[$this->group][$host])
                        ) {
                            if(array_key_exists('critical', $this->host_problems[$this->group][$host][$plugin])) {
                                $class = 'crit';
                            }
                            elseif(array_key_exists('warning', $this->host_problems[$this->group][$host][$plugin])) {
                                $class = 'warn';
                            }
                            elseif(array_key_exists('unknown', $this->host_problems[$this->group][$host][$plugin])) {
                                $class = 'unkn';
                            }
                        }
                        $i_class = 'i'. $class;

                        $attrs = [];
                        if($class) {
                            $attrs['class'] = $class;
                        }

                        print " :: ";

                        print $this->qlink(
                                            $this->escape($title),
                                            'munin/graph/show',
                                            [
                                              'group'  => $this->group,
                                              'host'   => $host,
                                              'plugin' => $plugin,
                                            ],
                                            $attrs
                                          );

                        print "<br/>\n";

                        $url  = 'show';
                        $url .= '?group='.  $this->escape($this->group);
                        $url .= '&host='.   $this->escape($host);
                        $url .= '&plugin='. $this->escape($plugin);

                        $img  = $this->graph_baseurl;
                        $img .= '/'. $this->escape($this->group);
                        $img .= '/'. $this->escape($host);
                        $img .= '/'. $this->escape($plugin);
                        $img .= '-'. $this->escape($this->period) .'.png';

                        print "<a href=\"$url\"";
                        if($class) {
                            print " class=\"$class\"";
                        }
                        print "><img src=\"$img\" alt=\"$title\" class=\"$i_class\" /></a>";
                    }

                    print "</div>";
                    print "</td>";
                }

                print "</tr>\n";
            }
            print "</table>\n";
        }
    }
}
elseif($this->group) {
    if(
        array_key_exists('_group', $this->data) &&
        count($this->data['_group']) > 0 &&
        array_key_exists($this->group, $this->data['_group']) &&
        count($this->data['_group'][$this->group]) > 0
    ) {
        ksort($this->data['_group'][$this->group]);

        print "  <ul>\n";
        foreach($this->data['_group'][$this->group] as $host => $host_value) {
            ksort($host_value['_category']);

            print "    <li>";
            print $this->qlink(
                                $this->escape($host),
                                'munin/graph/show',
                                [
                                  'group' => $this->group,
                                  'host'  => $host,
                                ]
                              );
            print "      <ul>\n";
            foreach($host_value['_category'] as $category => $category_value) {
                $plugins = [];

                foreach($category_value as $plugin => $plugin_value) {
                    $title = $plugin;
                    if(array_key_exists('graph_title', $plugin_value)) {
                        $title = $plugin_value['graph_title'];
                    }

                    $plugins[$plugin] = $title;
                }

                asort($plugins);

                $url  = 'show';
                $url .= '?group='. $this->escape($this->group);
                $url .= '&host='.  $this->escape($host);
                $url .= '#'.       $this->escape($category);

                print "        <li>";
                print "<a href=\"$url\">$category</a>";
                print "          <ul>\n";
                foreach($plugins as $plugin => $title) {
                    $attrs = [];
                    if(
                        array_key_exists($this->group, $this->host_problems) &&
                        array_key_exists($host, $this->host_problems[$this->group]) &&
                        array_key_exists($plugin, $this->host_problems[$this->group][$host])
                    ) {
                        if(array_key_exists('critical', $this->host_problems[$this->group][$host][$plugin])) {
                            $attrs['class'] = 'crit';
                        }
                        elseif(array_key_exists('warning', $this->host_problems[$this->group][$host][$plugin])) {
                            $attrs['class'] = 'warn';
                        }
                        elseif(array_key_exists('unknown', $this->host_problems[$this->group][$host][$plugin])) {
                            $attrs['class'] = 'unkn';
                        }
                    }

                    print "            <li>";
                    print $this->qlink(
                                        $this->escape($title),
                                        'munin/graph/show',
                                        [
                                          'group'  => $this->group,
                                          'host'   => $host,
                                          'plugin' => $plugin,
                                        ],
                                        $attrs
                                      );
                    print "            </li>\n";
                }
                print "          </ul>\n";
                print "        </li>\n";
            }
            print "      </ul>\n";
            print "</li>\n";
        }
        print "  </ul>\n";
    }
}
elseif(
        array_key_exists('_group', $this->data) &&
        count($this->data['_group']) > 0
) {
    ksort($this->data['_group']);

    foreach($this->data['_group'] as $group => $group_value) {
        ksort($group_value);

        print "  <ul>\n";
        print "    <li>";
        print $this->qlink(
                            $this->escape($group),
                            'munin/graph/show',
                            [
                              'group' => $group,
                            ]
                          );
        print " :: [";
        foreach($this->periods as $period) {
            print " ". $this->qlink(
                                     $this->escape($period),
                                     'munin/graph/show',
                                     [
                                       'group'  => $group,
                                       'period' => $period,
                                     ]
                                   );
        }
        print " ]\n";
        print "      <ul>\n";
        foreach($group_value as $host => $host_value) {
            ksort($host_value['_category']);

            print "        <li>";
            print $this->qlink(
                                $this->escape($host),
                                'munin/graph/show',
                                [
                                  'group' => $group,
                                  'host'  => $host,
                                ]
                              );
            print " :: [";
            foreach($host_value['_category'] as $category => $category_value) {
                $url  = 'show';
                $url .= '?group='. $this->escape($group);
                $url .= '&host='.  $this->escape($host);
                $url .= '#'.       $this->escape($category);

                $class = '';
                if(
                    array_key_exists($group, $this->category_problems) &&
                    array_key_exists($host, $this->category_problems[$group]) &&
                    array_key_exists($category, $this->category_problems[$group][$host])
                ) {
                    if(array_key_exists('critical', $this->category_problems[$group][$host][$category])) {
                        $class = 'crit';
                    }
                    elseif(array_key_exists('warning', $this->category_problems[$group][$host][$category])) {
                        $class = 'warn';
                    }
                    elseif(array_key_exists('unknown', $this->category_problems[$group][$host][$category])) {
                        $class = 'unkn';
                    }
                }

                print " <a href=\"$url\"";
                if($class) {
                    print " class=\"$class\"";
                }
                print ">$category</a>";
            }
            print " ]\n";
            print "        </li>\n";
        }
        print "      </ul>\n";
        print "    </li>\n";
        print "  </ul>\n";
    }
}

if($this->debug) {
    print "Data:\n";
    print "<pre>";
    var_dump($this->data);
    print "</pre>";

    print "Limits:\n";
    print "<pre>";
    var_dump($this->limits);
    print "</pre>";

    print "Category Problems:\n";
    print "<pre>";
    var_dump($this->category_problems);
    print "</pre>";
}

?>
   </div>
</div>
